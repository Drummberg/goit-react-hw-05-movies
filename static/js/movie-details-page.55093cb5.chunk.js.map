{"version":3,"file":"static/js/movie-details-page.55093cb5.chunk.js","mappings":"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","sources":["services/fetchMovies.jsx","views/MovieDetailsPage/MovieDetailsPage.styled.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","views/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '1abcab100520369e11a771de2f4e2532';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchPopularMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`,\n  );\n  return data.results;\n};\n\nconst fetchMoviesName = async inputValue => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${inputValue}`,\n  );\n  return data.results;\n};\n\nconst fetchMovieById = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`,\n  );\n  return response.data;\n};\nconst fetchFilmCasts = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n  );\n  return response.data.cast;\n};\n\nconst fetchFilmReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n  );\n  return response.data.results;\n};\n\nconst fetches = {\n  fetchPopularMovies,\n  fetchMoviesName,\n  fetchMovieById,\n  fetchFilmCasts,\n  fetchFilmReviews,\n};\nexport default fetches;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Button = styled.button`\n    position: absolute;\n    padding: 5px;\n    font-size: 16px;\n    width: 100px;\n    margin-left: 10px;\n    margin-bottom: 15px;\n    margin-top: 3px;\n    cursor: pointer;\n    background-color: grey;\n    color: white;\n    border-radius: 5px;\n        &:hover {\n           background-color: orange;\n           color: blue;\n           font-weight: 700;\n`;\n\nexport const MovieCont = styled.div`\n  display: flex;\n  background-color: grey;\n  color: black;\n`;\n\nexport const MovieAbout = styled.div`\n  margin-left: 20px;\n  margin-top: 15px;\n`;\n\nexport const MovieGenres = styled.div`\n  display: flex;\n`;\n\nexport const MovieGenresP = styled.p`\n  margin-right: 15px;\n  font-weight: 400;\n  margin-top: 0;\n`;\nexport const MenuUl = styled.ul`\n  display: flex;\n  list-style: none;\n  border-bottom: 1px solid grey;\n  padding-bottom: 30px;\n  margin-top: 15px;\n  padding-top: 10px;\n  box-shadow: 0 7px 15px rgba(0, 0, 0, 0.281);\n`;\n\nexport const Links = styled.div`\n  background-color: grey;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n  font-weight: 700;\n`;\n\nexport const StyleLink = styled(NavLink)`\n    padding-bottom: 12px;\n  color: black;\n  font-size: 18px;\n  font-weight: 500;\n  border-bottom: 3px solid transparent;\n  transition: color: red;\n  text-decoration: none;\n  list-style: none;\n  margin-right: 20px;\n    &:hover {\n    cursor: pointer;\n    color: red;\n  }\n  `;\n\nexport const Img = styled.img`\n  border-radius: 5px;\n  margin-left: 20px;\n  margin-top: 40px;\n  box-shadow: 0 7px 15px rgba(0, 0, 0, 0.9);\n`;\n","import styled from 'styled-components';\n\nexport const Img = styled.img`\n  height: auto;\n  width: 111px;\n  border-radius: 5px;\n`;\n\nexport const Ul = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  background-color: grey;\n  margin-top: 0;\n`;\n\nexport const List = styled.li`\n  margin-right: 15px;\n  text-align: center;\n  box-shadow: 0 7px 15px rgba(0, 0, 0, 0.281);\n  border-radius: 5px;\n  margin-bottom: 10px;\n`;\n\nexport const Title = styled.p`\n  color: blue;\n  margin: 0;\n  font-size: 14px;\n  font-weight: 700;\n`;\n\nexport const Char = styled.p`\n  color: yellow;\n  margin: 0;\n  font-size: 14px;\n  font-weight: 700;\n`;\n","import React from 'react';\nimport notfound from '../../images/notfound.png';\nimport { Img, Ul, List, Title, Char } from './Cast.styled';\n\nconst Cast = ({ casts }) => {\n  return (\n    <>\n      <Ul>\n        {casts.map(({ id, profile_path, name, character }) => {\n          const profile = `https://image.tmdb.org/t/p/w200${profile_path}`;\n          return (\n            <List key={id}>\n              <Img src={profile_path ? profile : notfound} alt={name} />\n              <Title>{name}</Title>\n              <Char>{character}</Char>\n            </List>\n          );\n        })}\n      </Ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  list-style: none;\n  display: inline-block;\n  background-color: grey;\n  margin-top: 0;\n`;\n\nexport const Img = styled.img`\n  height: auto;\n  border-radius: 5px;\n`;\n\nexport const List = styled.li`\n  display: inline-block;\n  padding: 20px;\n  margin-right: 15px;\n  box-shadow: 0 7px 15px rgba(0, 0, 0, 0.281);\n  border-radius: 5px;\n  margin-bottom: 10px;\n`;\n\nexport const Pi = styled.p`\n  margin-left: 20px;\n  background-color: grey;\n  margin: 0;\n  font-size: 20px;\n  padding-left: 20px;\n  padding-bottom: 20px;\n`;\n","import React from 'react';\nimport { Ul, Img, List, Pi } from './Reviews.styled';\nimport notfound from '../../images/notfound.png';\n\nconst Reviews = ({ reviews }) => {\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <Ul>\n          {reviews.map(item => {\n            const avatar = item.author_details.avatar_path.slice(1);\n            return (\n              <List key={item.id}>\n                <Img src={avatar ? avatar : notfound} alt={item.author} />\n                <h3>{item.author}</h3>\n                <p>{item.content}</p>\n              </List>\n            );\n          })}\n        </Ul>\n      ) : (\n        <Pi>We don't have any reviews for this movie!</Pi>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n\n// id, author, content, author_details: { avatar_path\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  Button,\n  MovieCont,\n  MovieAbout,\n  MovieGenres,\n  MovieGenresP,\n  MenuUl,\n  Links,\n  StyleLink,\n  Img,\n} from './MovieDetailsPage.styled';\nimport Cast from '../../components/Cast/Cast';\nimport Reviews from '../../components/Reviews/Reviews';\nimport api from '../../services/fetchMovies';\n\nclass MovieDetailsPage extends Component {\n  state = {\n    movie: {},\n    query: '',\n    casts: [],\n    reviews: [],\n    from: '',\n  };\n\n  componentDidMount() {\n    const { movieId } = this.props.match.params;\n    api.fetchMovieById(movieId).then(movie =>\n      this.setState({\n        movie,\n      }),\n    );\n    api\n      .fetchFilmCasts(movieId)\n      .then(cast => this.setState({ casts: [...cast] }));\n\n    api.fetchFilmReviews(movieId).then(review =>\n      this.setState({\n        reviews: [...review],\n      }),\n    );\n\n    this.setState({\n      from: this.props.location.state?.from,\n      query: this.props.location.state?.query,\n    });\n  }\n\n  buttonBack = () => {\n    const { history } = this.props;\n    this.state.query\n      ? history.push({\n          pathname: this.state?.from,\n          search: `query=${this.state.query}`,\n          query: this.state.query,\n        })\n      : history.push('/');\n  };\n\n  render() {\n    const { title, vote_average, overview, genres, poster_path } =\n      this.state.movie;\n    const poster = `https://image.tmdb.org/t/p/w300${poster_path}`;\n    return (\n      <>\n        <MovieCont>\n          <Button type=\"button\" onClick={this.buttonBack}>\n            Go back\n          </Button>\n          <Img src={poster_path && poster} alt={title} />\n          <MovieAbout>\n            <h2>{title}</h2>\n            <p>User Score: {vote_average}/10</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <MovieGenres>\n              {genres &&\n                genres.map(genre => (\n                  <MovieGenresP key={genre.id}>{genre.name}</MovieGenresP>\n                ))}\n            </MovieGenres>\n          </MovieAbout>\n        </MovieCont>\n        <Links>\n          <MenuUl>\n            <li>\n              <StyleLink\n                to={`${this.props.match.url}/cast`}\n                activeStyle={{ fontWeight: 'bold', color: 'orange' }}\n              >\n                Cast\n              </StyleLink>\n            </li>\n            <li>\n              <StyleLink\n                to={`${this.props.match.url}/reviews`}\n                activeStyle={{ fontWeight: 'bold', color: 'orange' }}\n              >\n                Reviews\n              </StyleLink>\n            </li>\n          </MenuUl>\n        </Links>\n        <Switch>\n          <Route\n            path={`${this.props.match.path}/cast`}\n            render={props => {\n              return <Cast casts={this.state.casts} />;\n            }}\n          />\n          <Route\n            path={`${this.props.match.path}/reviews`}\n            render={props => {\n              return <Reviews reviews={this.state.reviews} />;\n            }}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport default MovieDetailsPage;\n"],"names":["API_KEY","BASE_URL","fetchPopularMovies","axios","data","results","fetchMoviesName","inputValue","fetchMovieById","movieId","response","fetchFilmCasts","cast","fetchFilmReviews","fetches","Button","styled","MovieCont","MovieAbout","MovieGenres","MovieGenresP","MenuUl","Links","StyleLink","NavLink","Img","Ul","List","Title","Char","casts","map","id","profile_path","name","character","profile","src","notfound","alt","Pi","reviews","length","item","avatar","author_details","avatar_path","slice","author","content","MovieDetailsPage","state","movie","query","from","buttonBack","history","props","push","pathname","search","this","match","params","api","then","setState","review","location","title","vote_average","overview","genres","poster_path","poster","type","onClick","genre","to","url","activeStyle","fontWeight","color","path","render","Component"],"sourceRoot":""}