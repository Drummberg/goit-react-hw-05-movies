{"version":3,"file":"static/js/movies-page.399c89c9.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","services/fetchMovies.jsx","views/MoviesPage/MoviesPage.styled.jsx","views/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyleLink = styled(NavLink)`\n  display: block;\n  color: black;\n  font-size: 16px;\n  font-weight: 400;\n  border-bottom: 3px solid transparent;\n  text-decoration: none;\n  margin-right: 20px;\n  &:hover {\n    cursor: pointer;\n    color: white;\n    font-weigth: 700;\n  }\n`;\n\nexport const Li = styled.li`\n  margin-right: 15px;\n  text-align: center;\n  box-shadow: 0 7px 15px rgba(0, 0, 0, 0.281);\n  border-radius: 5px;\n  margin-bottom: 10px;\n`;\n\nexport const Img = styled.img`\n  height: auto;\n  width: 111px;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n\nexport const Ul = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  background-color: grey;\n  padding-top: 20px;\n  margin: 0;\n`;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { StyleLink, Li, Img, Ul } from './MovieList.styled';\nimport notfound from '../../images/notfound.png';\n\nconst MovieList = ({ movies }) => {\n  return (\n    <Ul>\n      {movies.map(({ id, title, name, poster_path }) => {\n        const poster = `https://image.tmdb.org/t/p/w342${poster_path}`;\n        return (\n          <Li key={id}>\n            <Img src={poster_path ? poster : notfound} alt={name} />\n            <StyleLink to={`/movies/${id}`}>{title ? title : name}</StyleLink>\n          </Li>\n        );\n      })}\n    </Ul>\n  );\n};\n\nexport default withRouter(MovieList);\n","import axios from 'axios';\n\nconst API_KEY = '1abcab100520369e11a771de2f4e2532';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchPopularMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`,\n  );\n  return data.results;\n};\n\nconst fetchMoviesName = async inputValue => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${inputValue}`,\n  );\n  return data.results;\n};\n\nconst fetchMovieById = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`,\n  );\n  return response.data;\n};\nconst fetchFilmCasts = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n  );\n  return response.data.cast;\n};\n\nconst fetchFilmReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n  );\n  return response.data.results;\n};\n\nconst fetches = {\n  fetchPopularMovies,\n  fetchMoviesName,\n  fetchMovieById,\n  fetchFilmCasts,\n  fetchFilmReviews,\n};\nexport default fetches;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  padding: 5px;\n  width: 100px;\n  margin-left: 10px;\n\n  cursor: pointer;\n  &:hover {\n    background-color: orange;\n    border-radius: 5px;\n    color: blue;\n    font-weight: 700;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  width: 100px;\n  padding-left: 10px;\n  margin-top: 10px;\n`;\n","import { Component } from 'react';\nimport MovieList from '../../components/MovieList/MovieList';\nimport api from '../../services/fetchMovies';\nimport { Button, Form } from './MoviesPage.styled';\n\nclass MoviesPage extends Component {\n  state = {\n    movies: [],\n    query: '',\n  };\n\n  componentDidMount() {\n    if (this.state.query) {\n      api.fetchMoviesName(this.state.query).then(movies =>\n        this.setState({\n          movies: [...movies],\n          query: this.props.location.query,\n        }),\n      );\n    }\n  }\n\n  onHandleChange = event => {\n    event.preventDefault();\n\n    this.setState({ query: event.target.value.toLowerCase() });\n  };\n\n  onFindMovies = event => {\n    event.preventDefault();\n    const inputValue = this.state.query;\n    api.fetchMoviesName(inputValue).then(films =>\n      this.setState({\n        movies: [...films],\n      }),\n    );\n    console.log(this.state.movies);\n    this.props.history.push({\n      pathname: this.props.match.url,\n      search: `query=${inputValue}`,\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n    return (\n      <>\n        <Form onSubmit={this.onFindMovies}>\n          <input\n            type=\"text\"\n            name=\"query\"\n            value={this.state.query}\n            onChange={this.onHandleChange}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movie\"\n          />\n          <Button type=\"submit\">Search</Button>\n        </Form>\n        {movies.length > 0 && <MovieList movies={movies} />}\n      </>\n    );\n  }\n}\n\nexport default MoviesPage;\n"],"names":["StyleLink","styled","NavLink","Li","Img","Ul","withRouter","movies","map","id","title","name","poster_path","poster","src","notfound","alt","to","API_KEY","BASE_URL","fetchPopularMovies","axios","data","results","fetchMoviesName","inputValue","fetchMovieById","movieId","response","fetchFilmCasts","cast","fetchFilmReviews","fetches","Button","Form","MoviesPage","state","query","onHandleChange","event","preventDefault","setState","target","value","toLowerCase","onFindMovies","api","then","films","console","log","props","history","push","pathname","match","url","search","this","location","onSubmit","type","onChange","autoComplete","autoFocus","placeholder","length","MovieList","Component"],"sourceRoot":""}