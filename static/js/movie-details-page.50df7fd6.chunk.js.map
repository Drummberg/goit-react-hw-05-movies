{"version":3,"file":"static/js/movie-details-page.50df7fd6.chunk.js","mappings":"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","sources":["services/fetchMovies.jsx","views/MovieDetailsPage/MovieDetailsPage.styled.jsx","views/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '1abcab100520369e11a771de2f4e2532';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchPopularMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`,\n  );\n  return data.results;\n};\n\nconst fetchMoviesName = async inputValue => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${inputValue}`,\n  );\n  return data.results;\n};\n\nconst fetchMovieById = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`,\n  );\n  return response.data;\n};\nconst fetchFilmCasts = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n  );\n  return response.data.cast;\n};\n\nconst fetchFilmReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n  );\n  return response.data.results;\n};\n\nconst fetches = {\n  fetchPopularMovies,\n  fetchMoviesName,\n  fetchMovieById,\n  fetchFilmCasts,\n  fetchFilmReviews,\n};\nexport default fetches;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Button = styled.button`\n    position: absolute;\n    padding: 5px;\n    font-size: 16px;\n    width: 100px;\n    margin-left: 10px;\n    margin-bottom: 15px;\n    margin-top: 3px;\n    cursor: pointer;\n    background-color: grey;\n    color: white;\n    border-radius: 5px;\n        &:hover {\n           background-color: orange;\n           color: blue;\n           font-weight: 700;\n`;\n\nexport const MovieCont = styled.div`\n  display: flex;\n  background-color: grey;\n  color: black;\n`;\n\nexport const MovieAbout = styled.div`\n  margin-left: 20px;\n  margin-top: 15px;\n`;\n\nexport const MovieGenres = styled.div`\n  display: flex;\n`;\n\nexport const MovieGenresP = styled.p`\n  margin-right: 15px;\n  font-weight: 400;\n  margin-top: 0;\n`;\nexport const MenuUl = styled.ul`\n  display: flex;\n  list-style: none;\n  border-bottom: 1px solid grey;\n  padding-bottom: 30px;\n  margin-top: 15px;\n  padding-top: 10px;\n  box-shadow: 0 7px 15px rgba(0, 0, 0, 0.281);\n`;\n\nexport const Links = styled.div`\n  background-color: grey;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n  font-weight: 700;\n`;\n\nexport const StyleLink = styled(Link)`\n    padding-bottom: 12px;\n  color: black;\n  font-size: 18px;\n  font-weight: 500;\n  border-bottom: 3px solid transparent;\n  transition: color: red;\n  text-decoration: none;\n  list-style: none;\n  margin-right: 20px;\n  &:active{\n      color: orange;\n  }\n    &:hover {\n    cursor: pointer;\n    color: red;\n  }\n  `;\n\nexport const Img = styled.img`\n  border-radius: 5px;\n  margin-left: 20px;\n  margin-top: 40px;\n  box-shadow: 0 7px 15px rgba(0, 0, 0, 0.9);\n`;\n","import { useEffect, useState, lazy, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  useParams,\n  Route,\n  Switch,\n  useLocation,\n  useRouteMatch,\n  useHistory,\n} from 'react-router-dom';\nimport {\n  Button,\n  MovieCont,\n  MovieAbout,\n  MovieGenres,\n  MovieGenresP,\n  MenuUl,\n  Links,\n  StyleLink,\n  Img,\n} from './MovieDetailsPage.styled';\nimport api from '../../services/fetchMovies';\n\nconst Casts = lazy(() =>\n  import('../../components/Casts/Casts' /* webpackChunkName: \"cast-view\" */),\n);\n\nconst Reviews = lazy(() =>\n  import(\n    '../../components/Reviews/Reviews' /* webpackChunkName: \"reviews-view\" */\n  ),\n);\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState({});\n  const { title, vote_average, overview, genres, poster_path } = movie;\n  const location = useLocation();\n  const { movieId } = useParams();\n\n  const match = useRouteMatch();\n  const poster = `https://image.tmdb.org/t/p/w300${poster_path}`;\n  const history = useHistory();\n\n  useEffect(() => {\n    api.fetchMovieById(movieId).then(setMovie);\n  }, [movieId]);\n\n  function buttonBack() {\n    history.push(location.state.from);\n  }\n\n  return (\n    <>\n      <MovieCont>\n        <Button type=\"button\" onClick={buttonBack}>\n          Go back\n        </Button>\n        <Img src={poster_path && poster} alt={title} />\n        <MovieAbout>\n          <h2>{title}</h2>\n          <p>User Score: {vote_average * 10}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <MovieGenres>\n            {genres &&\n              genres.map(genre => (\n                <MovieGenresP key={genre.id}>{genre.name}</MovieGenresP>\n              ))}\n          </MovieGenres>\n        </MovieAbout>\n      </MovieCont>\n      <Links>\n        <MenuUl>\n          <li>\n            <StyleLink\n              to={{\n                pathname: `${match.url}/cast`,\n                state: { from: location },\n              }}\n            >\n              Cast\n            </StyleLink>\n          </li>\n          <li>\n            <StyleLink\n              to={{\n                pathname: `${match.url}/reviews`,\n                state: { from: location },\n              }}\n            >\n              Reviews\n            </StyleLink>\n          </li>\n        </MenuUl>\n      </Links>\n      <Suspense fallback={<div>Loading...Please wait..</div>}></Suspense>\n      <Switch>\n        <Route path={`${match.path}/cast`} exact component={Casts} />\n        <Route path={`${match.path}/reviews`} component={Reviews} />\n      </Switch>\n    </>\n  );\n}\n\nMovieDetailsPage.propTypes = {\n  onClick: PropTypes.func,\n};\n"],"names":["API_KEY","BASE_URL","fetchPopularMovies","axios","data","results","fetchMoviesName","inputValue","fetchMovieById","movieId","response","fetchFilmCasts","cast","fetchFilmReviews","fetches","Button","styled","MovieCont","MovieAbout","MovieGenres","MovieGenresP","MenuUl","Links","StyleLink","Link","Img","Casts","lazy","Reviews","MovieDetailsPage","useState","movie","setMovie","title","vote_average","overview","genres","poster_path","location","useLocation","useParams","match","useRouteMatch","poster","history","useHistory","useEffect","api","then","type","onClick","push","state","from","src","alt","map","genre","name","id","to","pathname","url","Suspense","fallback","path","exact","component"],"sourceRoot":""}