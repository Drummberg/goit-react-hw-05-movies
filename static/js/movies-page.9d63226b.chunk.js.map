{"version":3,"file":"static/js/movies-page.9d63226b.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","services/fetchMovies.jsx","views/MoviesPage/MoviesPage.styled.jsx","views/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyleLink = styled(Link)`\n  display: block;\n  color: black;\n  font-size: 16px;\n  font-weight: 400;\n  border-bottom: 3px solid transparent;\n  text-decoration: none;\n  margin-right: 20px;\n  &:hover {\n    cursor: pointer;\n    color: white;\n    font-weigth: 700;\n  }\n`;\n\nexport const Li = styled.li`\n  margin-right: 15px;\n  text-align: center;\n  box-shadow: 0 7px 15px rgba(0, 0, 0, 0.281);\n  border-radius: 5px;\n  margin-bottom: 10px;\n`;\n\nexport const Img = styled.img`\n  height: auto;\n  width: 111px;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n\nexport const Ul = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  background-color: grey;\n  padding-top: 50px;\n  margin: 0;\n`;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useHistory, useRouteMatch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { StyleLink, Li, Img, Ul } from './MovieList.styled';\nimport notfound from '../../images/notfound.png';\n\nexport default function MovieList({ movies }) {\n  const [query, setQuery] = useState('');\n  const location = useLocation();\n  const match = useRouteMatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    console.log(location);\n    if (query) {\n      setQuery(query);\n    }\n\n    history.push({\n      pathname: `${match.url}`,\n      // search: `query=${query}`,\n      state: {\n        from: location,\n      },\n    });\n  }, [history, match.url, query]);\n\n  return (\n    <Ul>\n      {movies.map(({ id, title, name, poster_path }) => {\n        const poster = `https://image.tmdb.org/t/p/w342${poster_path}`;\n        return (\n          <Li key={id}>\n            <Img src={poster_path ? poster : notfound} alt={name} />\n            <StyleLink\n              to={{\n                pathname: `/movies/${id}`,\n                search: `query=${query}`,\n                state: { from: location },\n              }}\n              // to={{\n              //       pathname: `/movies/${id}`,\n              //       state:{ from: location }\n              // }}\n            >\n              {title ? title : name}\n            </StyleLink>\n          </Li>\n        );\n      })}\n    </Ul>\n  );\n}\n\nMovieList.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n  }),\n};\n","import axios from 'axios';\n\nconst API_KEY = '1abcab100520369e11a771de2f4e2532';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchPopularMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`,\n  );\n  return data.results;\n};\n\nconst fetchMoviesName = async inputValue => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${inputValue}`,\n  );\n  return data.results;\n};\n\nconst fetchMovieById = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`,\n  );\n  return response.data;\n};\nconst fetchFilmCasts = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n  );\n  return response.data.cast;\n};\n\nconst fetchFilmReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n  );\n  return response.data.results;\n};\n\nconst fetches = {\n  fetchPopularMovies,\n  fetchMoviesName,\n  fetchMovieById,\n  fetchFilmCasts,\n  fetchFilmReviews,\n};\nexport default fetches;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  padding: 5px;\n  font-size: 16px;\n  width: 100px;\n  margin-left: 10px;\n  cursor: pointer;\n  background-color: transparent;\n  border-radius: 5px;\n  &:hover {\n    background-color: orange;\n    border-radius: 5px;\n    color: blue;\n    font-weight: 700;\n  }\n`;\nexport const Form = styled.form`\n  position: absolute;\n  border-top: none;\n  display: flex;\n  width: 100%;\n  padding-left: 20px;\n  margin-top: 10px;\n\n  color: white;\n`;\n\nexport const MovieCont = styled.div`\n  background-color: grey;\n  width: 100%;\n`;\n\nexport const Input = styled.input`\n  background-color: transparent;\n  border-top: none;\n`;\n","import { useEffect, useState } from 'react';\nimport {\n  useLocation,\n  useParams,\n  useHistory,\n  useRouteMatch,\n} from 'react-router-dom';\nimport MovieList from '../../components/MovieList/MovieList';\nimport api from '../../services/fetchMovies';\nimport { Button, Form, MovieCont } from './MoviesPage.styled';\n\nexport default function MoviesPage() {\n  const location = useLocation();\n  const [query, setQuery] = useState('');\n  const [movies, setMovie] = useState([]);\n  const history = useHistory();\n  const { movieId } = useParams();\n  const match = useRouteMatch();\n\n  useEffect(() => {\n    if (query.trim() === '') {\n      return;\n    }\n\n    const fetchMoviesName = () => {\n      api.get(`'movies'/${query}`).then(films => setMovie(films));\n    };\n\n    fetchMoviesName();\n  }, [movieId]);\n\n  function onFindMovies(event) {\n    event.preventDefault();\n    const inputValue = query;\n    api.fetchMoviesName(inputValue).then(films => setMovie(films));\n\n    history.push({\n      pathname: `${match.url}`,\n      search: `query=${query}`,\n      state: {\n        from: location,\n      },\n    });\n  }\n\n  function onHandleChange(event) {\n    setQuery(event.target.value.toLowerCase());\n  }\n\n  return (\n    <>\n      <MovieCont>\n        <Form onSubmit={onFindMovies}>\n          <input\n            type=\"text\"\n            name=\"query\"\n            value={query}\n            onChange={onHandleChange}\n            autoComplete=\"on\"\n            autoFocus\n            placeholder=\"Search movie\"\n          />\n          <Button type=\"submit\">Search</Button>\n        </Form>\n      </MovieCont>\n      {movies.length > 0 && <MovieList movies={movies} />}\n    </>\n  );\n}\n\n// import { Component } from 'react';\n// import MovieList from '../../components/MovieList/MovieList';\n// import api from '../../services/fetchMovies';\n// import { Button, Form, MovieCont } from './MoviesPage.styled';\n\n// class MoviesPage extends Component {\n//   state = {\n//     movies: [],\n//     query: '',\n//     from: '',\n//   };\n\n//   componentDidMount() {\n//     if (this.state.query) {\n//       api.fetchMoviesName(this.state.query).then(movies =>\n//         this.setState({\n//           movies: [...movies],\n//           from: this.props.location.state?.from,\n//           query: this.props.location.state?.query,\n//         }),\n//       );\n//     }\n//   }\n\n//   onHandleChange = event => {\n//     event.preventDefault();\n\n//     this.setState({ query: event.target.value.toLowerCase() });\n//   };\n\n//   onFindMovies = event => {\n//     event.preventDefault();\n//     const inputValue = this.state.query;\n//     api.fetchMoviesName(inputValue).then(films =>\n//       this.setState({\n//         movies: [...films],\n//       }),\n//     );\n\n//     this.props.history.push({\n//       pathname: this.props.match.url,\n//       search: `query=${inputValue}`,\n//     });\n//   };\n\n//   render() {\n//     const { movies } = this.state;\n//     return (\n//       <>\n//         <MovieCont>\n//           <Form onSubmit={this.onFindMovies}>\n//             <input\n//               type=\"text\"\n//               name=\"query\"\n//               value={this.state.query}\n//               onChange={this.onHandleChange}\n//               autoComplete=\"off\"\n//               autoFocus\n//               placeholder=\"Search movie\"\n//             />\n//             <Button type=\"submit\">Search</Button>\n//           </Form>\n//         </MovieCont>\n//         {movies.length > 0 && <MovieList movies={movies} />}\n//       </>\n//     );\n//   }\n// }\n\n// export default MoviesPage;\n"],"names":["StyleLink","styled","Link","Li","Img","Ul","MovieList","movies","useState","query","setQuery","location","useLocation","match","useRouteMatch","history","useHistory","useEffect","console","log","push","pathname","url","state","from","map","id","title","name","poster_path","poster","src","notfound","alt","to","search","API_KEY","BASE_URL","fetchPopularMovies","axios","data","results","fetchMoviesName","inputValue","fetchMovieById","movieId","response","fetchFilmCasts","cast","fetchFilmReviews","fetches","Button","Form","MovieCont","MoviesPage","setMovie","useParams","trim","api","then","films","onSubmit","event","preventDefault","type","value","onChange","target","toLowerCase","autoComplete","autoFocus","placeholder","length"],"sourceRoot":""}